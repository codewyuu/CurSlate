"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6391],{54774:(e,r,t)=>{var n,o=t(65606),f=t(48287),i=f.Buffer,a={};for(n in f)f.hasOwnProperty(n)&&"SlowBuffer"!==n&&"Buffer"!==n&&(a[n]=f[n]);var u=a.Buffer={};for(n in i)i.hasOwnProperty(n)&&"allocUnsafe"!==n&&"allocUnsafeSlow"!==n&&(u[n]=i[n]);if(a.Buffer.prototype=i.prototype,u.from&&u.from!==Uint8Array.from||(u.from=function(e,r,t){if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return i(e,r,t)}),u.alloc||(u.alloc=function(e,r,t){if("number"!=typeof e)throw new TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value "'+e+'" is invalid for option "size"');var n=i(e);return r&&0!==r.length?"string"==typeof t?n.fill(r,t):n.fill(r):n.fill(0),n}),!a.kStringMaxLength)try{a.kStringMaxLength=o.binding("buffer").kStringMaxLength}catch(e){}a.constants||(a.constants={MAX_LENGTH:a.kMaxLength},a.kStringMaxLength&&(a.constants.MAX_STRING_LENGTH=a.kStringMaxLength)),e.exports=a}}]);