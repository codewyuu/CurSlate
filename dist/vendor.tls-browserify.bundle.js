(self.webpackChunk=self.webpackChunk||[]).push([[5723],{42867:(t,e,n)=>{var s=n(48287).Buffer,i=n(65606),o=n(46165),r=n(40537),c=n(94148),a=(n(88310),n(10937));function h(t,e){if(!(this instanceof h))return new h(t,e);var n=this;c(!(t instanceof h)),o.Socket.call(this),this._tlsOptions=e,this._secureEstablished=!1,this._chunks=[],this.encrypted=!0,t?(this._connecting=t._connecting,this._socket=t,this._init(t)):this.once("connect",(function(){n._init(null)})),this.readable=!0,this.writable=!0,this.read(0)}a.forge&&(a=a.forge),r.inherits(h,o.Socket),e.TLSSocket=h,h.prototype.log=function(arguments){this._tlsOptions.debug&&console.log.apply(console,Array.prototype.slice.call(arguments))},h.prototype._init=function(t){var e=this,n=this._tlsOptions;if(this.ssl=a.tls.createConnection({server:!1,verify:function(t,s,i,o){if(!n.rejectUnauthorized||!n.servername)return e.log("[tls] server certificate verification skipped"),!0;if(e.log("[tls] skipping certificate trust verification"),s=!0,0===i){var r=o[0].subject.getField("CN").value;r!==n.servername&&(s={alert:a.tls.Alert.Description.bad_certificate,message:"Certificate common name does not match hostname."},console.warn("[tls] "+r+" !== "+n.servername)),e.log("[tls] server certificate verified")}return s},connected:function(t){e.log("[tls] connected",e),e._secureEstablished=!0,e._writePending(),e.emit("secure")},tlsDataReady:function(t){var n=t.tlsData.getBytes();o.Socket.prototype.write.call(e._socket,n,"binary")},dataReady:function(t){var n=t.data.getBytes(),i=new s(n,"binary");e.log("[tls] received: ",n),e.push(i)},closed:function(){e.log("[tls] disconnected"),e.end()},error:function(t,n){e.log("[tls] error",n),n.toString=function(){return"TLS error: "+n.message},e.emit("error",n)}}),this._socket.push=function(t){e.ssl.process(t.toString("binary"))},t&&t._readableState.length)for(var i;null!==(i=t.read());)this.ssl.process(i);this.log("[tls] init"),"open"!=this._socket.readyState?this._socket.once("connect",(function(){e.emit("connect"),e._start()})):this._start()},h.prototype._start=function(){this.log("[tls] handshaking"),this.ssl.handshake()},h.prototype._read=function(){},h.prototype._writenow=function(t,e,n){n=n||function(){},this.log("[tls] sending: ",t.toString("utf8"));var s=this.ssl.prepare(t.toString("binary"));i.nextTick((function(){n(!1!==s?null:"Error while packaging data into a TLS record")}))},h.prototype._writePending=function(){if(this._chunks.length>0){for(var t in this._chunks)this._writenow(this._chunks[t][0],this._chunks[t][1],this._chunks[t][2]);this._chunks=[]}},h.prototype._write=function(t,e,n){this._secureEstablished?(this._writePending(),this._writenow(t,e,n)):this._chunks.push([t,e,n])},h.prototype.connect=function(){var t=this;return t._connecting=!0,this._socket=new o.Socket,this._socket.on("connect",(function(){t._connecting=!1,t._init(null)})),this._socket.connect.apply(this._socket,arguments),this},h.prototype.push=function(){o.Socket.prototype.push.apply(this,arguments),o.Socket.prototype.push.apply(this._socket,arguments)},e.connect=function(){var t=function(t){var e=o._normalizeConnectArgs(t),n=e[0],s=e[1];return r.isObject(t[1])?n=r._extend(n,t[1]):r.isObject(t[2])&&(n=r._extend(n,t[2])),s?[n,s]:[n]}(arguments),e=t[0],n=t[1],s={rejectUnauthorized:"0"!==i.env.NODE_TLS_REJECT_UNAUTHORIZED,ciphers:null},c=((e=r._extend(s,e||{})).servername||e.host||e.socket&&e.socket._host,new h(e.socket,{rejectUnauthorized:e.rejectUnauthorized}));return e.socket&&e.socket.once("connect",(function(){})),e.servername,n&&c.once("secure",n),e.socket||c.connect({host:e.host,port:e.port}),c}}}]);